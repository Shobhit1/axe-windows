name: $(date:yyyy-MM-dd)$(rev:.rr)
trigger: none
pr: none
variables:
  BuildPlatform: 'x86'
  DropFolder: 'signed'
  MAICreateNuget: 'true'
  PublicRelease: 'true'
  SignAppForRelease: 'true'
  MicroBuild_NuPkgSigningEnabled: 'true'
  TeamName: 'Axe Windows'
  system.debug: 'true' #set to true in case our signed build flakes out again
  FAKES_SUPPORTED: 1

jobs:
- job: SignedRelease
  pool: VSEng-MicroBuildVS2017
  steps:
  - task: ms-vseng.MicroBuildTasks.a0262b21-fb8f-46f8-bb9a-60ed560d4a87.MicroBuildLocalizationPlugin@1
    displayName: 'Install Localization Plugin'

  - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1
    displayName: 'Install Signing Plugin'
    inputs:
      signType: real
      esrpSigning: true
      msbuildArguments: '/v:diag'
    condition: and(succeeded(), ne(variables['SignType'], ''))

  - task: NuGetToolInstaller@0
    displayName: 'Use NuGet 5.0.0'
    inputs:
      versionSpec: '5.0.0'

  - task: NuGetCommand@2
    displayName: 'NuGet restore'

  - task: VSBuild@1
    displayName: 'Build Solution **\*.sln'
    inputs:
      vsVersion: 15.0
      platform: '$(BuildPlatform)'
      configuration: release

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
    inputs:
      Contents: '**\bin\release\**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'

  - task: securedevelopmentteam.vss-secure-development-tools.build-task-binskim.BinSkim@3
    displayName: 'Run BinSkim'
    inputs:
      InputType: Basic
      # Double-quote syntax with trailing backslash on each line concatenates lines without spaces
      AnalyzeTarget: "src\\AccessibilityInsights.Actions\\bin\\Release\\*.dll;\
                      src\\AccessibilityInsights.Automation\\bin\\Release\\*.dll;\
                      src\\AccessibilityInsights.Core\\bin\\Release\\*.dll;\
                      src\\AccessibilityInsights.Desktop\\bin\\Release\\*.dll;\
                      src\\AccessibilityInsights.Rules\\bin\\Release\\*.dll;\
                      src\\AccessibilityInsights.RuleSelection\\bin\\Release\\*.dll;\
                      src\\AccessibilityInsights.Win32\\bin\\Release\\*.dll;\
                      src\\Axe.Windows.Telemetry\\bin\\Release\\*.dll;"

  - task: securedevelopmentteam.vss-secure-development-tools.build-task-report.SdtReport@1
    displayName: 'Create Security Analysis Report'
    inputs:
      CredScan: true
      FxCop: true

  - task: securedevelopmentteam.vss-secure-development-tools.build-task-publishsecurityanalysislogs.PublishSecurityAnalysisLogs@2
    displayName: 'Publish Security Analysis Logs'

  - task: securedevelopmentteam.vss-secure-development-tools.build-task-postanalysis.PostAnalysis@1
    displayName: 'Post Analysis'
    inputs:
      CredScan: true
      FxCop: true
      FxCopBreakOn: CriticalError

  - task: VSTest@2
    displayName: 'Test Assemblies **\release\*test*.dll;-:**\obj\**'
    inputs:
      testAssemblyVer2: |
        **\*test*.dll
        !**\obj\**
      vsTestVersion: 15.0
      codeCoverageEnabled: false
      platform: '$(BuildPlatform)'
      configuration: release
      rerunFailedTests: true

  - task: PublishSymbols@1
    displayName: 'Index Sources'
    inputs:
      SearchPattern: '**\bin\**\*.pdb'
    continueOnError: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: (NuGet Axe.Windows)'
    inputs:
      PathtoPublish: 'src\AccessibilityInsights.CI\bin\Release\NuGet'
      ArtifactName: '$(DropFolder)'
      publishLocation: FilePath
      TargetPath: '$(DropRoot)'
    continueOnError: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: (NuGet Axe.Windows.RulesLibrary)'
    inputs:
      PathtoPublish: 'src\AccessibilityInsights.Rules\bin\Release\NuGet'
      ArtifactName: '$(DropFolder)'
      publishLocation: FilePath
      TargetPath: '$(DropRoot)'
    continueOnError: true

  - task: ms-vscs-artifact.build-tasks.artifactSymbolTask-1.artifactSymbolTask@0
    displayName: 'Publish Symbols'
    inputs:
      symbolServiceURI: 'https://microsoft.artifacts.visualstudio.com/DefaultCollection'
      requestName: 'CollectionId/$(System.CollectionId)/ProjectId/$(System.TeamProjectId)/BuildId/$(Build.BuildId)'
      sourcePath: '$(Build.ArtifactStagingDirectory)'
      detailedLog: true
      usePat: false

  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
      
  - task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1
    displayName: 'Perform Cleanup Tasks'
    condition: succeededOrFailed()